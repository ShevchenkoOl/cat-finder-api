{"mappings":"8hBAAA,SAASA,EAASC,EAAWC,EAAO,IAAKC,EAAU,IAClD,GAAyB,mBAAdF,EACV,MAAM,IAAIG,UAAU,+DAA+DH,QAGpF,GAAIC,EAAO,EACV,MAAM,IAAIG,WAAW,gCAItB,MAAMC,UAACA,GAAgC,kBAAZH,EAAwB,CAACG,UAAWH,GAAWA,EAE1E,IAAII,EACAC,EACAC,EACAC,EACAC,EAEJ,SAASC,IACR,MAAMC,EAAOC,KAAKC,MAAQL,EAE1B,GAAIG,EAAOX,GAAQW,GAAQ,EAC1BJ,EAAYO,WAAWJ,EAAOV,EAAOW,QAIrC,GAFAJ,OAAYQ,GAEPX,EAAW,CACf,MAAMY,EAAcX,EACdY,EAAgBX,EACtBD,OAAgBU,EAChBT,OAAkBS,EAClBN,EAASV,EAAUmB,MAAMF,EAAaC,E,EAKzC,MAAME,EAAY,YAAaC,GAC9B,GAAIf,GAAiBgB,OAAShB,EAC7B,MAAM,IAAIiB,MAAM,oDAGjBjB,EAAgBgB,KAChBf,EAAkBc,EAClBZ,EAAYI,KAAKC,MAEjB,MAAMU,EAAUnB,IAAcG,EAM9B,GAJKA,IACJA,EAAYO,WAAWJ,EAAOV,IAG3BuB,EAAS,CACZ,MAAMP,EAAcX,EACdY,EAAgBX,EACtBD,OAAgBU,EAChBT,OAAkBS,EAClBN,EAASV,EAAUmB,MAAMF,EAAaC,E,CAGvC,OAAOR,C,EA2BR,OAxBAU,EAAUK,MAAQ,KACZjB,IAILkB,aAAalB,GACbA,OAAYQ,EAAS,EAGtBI,EAAUO,MAAQ,KACjB,IAAKnB,EACJ,OAGD,MAAMS,EAAcX,EACdY,EAAgBX,EACtBD,OAAgBU,EAChBT,OAAkBS,EAClBN,EAASV,EAAUmB,MAAMF,EAAaC,GAEtCQ,aAAalB,GACbA,OAAYQ,CAAS,EAGfI,C,CAIRQ,EAAeC,SAAW9B,EAE1B6B,EAAiB7B,E,iBCvFjB,MAAM+B,EAAQC,SAASC,cAAc,eAC/BC,EAAcF,SAASC,cAAc,iBACrCE,EAAcH,SAASC,cAAc,iBAG3CF,EAAMK,iBACJ,QACAC,EAAAR,EAAA,EAASS,IACL,MAAMC,EAAeR,EAAMS,MAAMC,OCXT,IAAAC,EDkE5BR,EAAYS,UAAY,GACxBR,EAAYQ,UAAY,GAtDD,KAAjBJ,ICbsBG,EDcPH,ECbZK,MACL,uCAAuCF,qDAEpCG,MAAKC,IACN,IAAKA,EAASC,GAAI,CAChB,GAAwB,MAApBD,EAASE,OACX,MAAO,GAET,MAAM,IAAIxB,MAAMsB,EAASE,O,CAE3B,OAAOF,EAASG,MAAM,IAEvBC,OAAMC,IACLC,QAAQD,MAAMA,EAAM,KDASN,MAAKQ,IAE9BA,EAAUC,OAAS,GACrBjB,EAAAkB,GAASC,OAAOC,KACd,8DAE4B,IAArBJ,EAAUC,OACnBjB,EAAAkB,GAASC,OAAOE,QAAQ,4CACfL,EAAUC,QAAU,GAAKD,EAAUC,QAAU,GAYhE,SAA2BK,GACzB,MAAMC,EAASD,EACZE,KAAIC,GACI,yBACKA,EAAQC,MAAMC,qBACxBF,EAAQpB,KAAKuB,iDAEPH,EAAQpB,KAAKuB,wCAGtBC,KAAK,IACRhC,EAAYS,UAAYiB,C,CArBhBO,CAAkBd,GACY,IAArBA,EAAUC,QAuB7B,SAA0BK,GACpB,MAAMC,EAASD,EACZE,KAAIC,GACI,yBACCA,EAAQC,MAAMC,qBACpBF,EAAQpB,KAAKuB,iDAEXH,EAAQpB,KAAKuB,oDACMH,EAAQM,kDACLN,EAAQO,oDACTC,OAAOC,OAAOT,EAAQU,2CAGhDN,KAAK,IACRhC,EAAYS,UAAYiB,C,CAnCpBa,CAAiBpB,EAAU,GAE7B,GAvBe","sources":["node_modules/debounce/index.js","src/js/conntry.js","src/js/country-api.js"],"sourcesContent":["function debounce(function_, wait = 100, options = {}) {\n\tif (typeof function_ !== 'function') {\n\t\tthrow new TypeError(`Expected the first parameter to be a function, got \\`${typeof function_}\\`.`);\n\t}\n\n\tif (wait < 0) {\n\t\tthrow new RangeError('`wait` must not be negative.');\n\t}\n\n\t// TODO: Deprecate the boolean parameter at some point.\n\tconst {immediate} = typeof options === 'boolean' ? {immediate: options} : options;\n\n\tlet storedContext;\n\tlet storedArguments;\n\tlet timeoutId;\n\tlet timestamp;\n\tlet result;\n\n\tfunction later() {\n\t\tconst last = Date.now() - timestamp;\n\n\t\tif (last < wait && last >= 0) {\n\t\t\ttimeoutId = setTimeout(later, wait - last);\n\t\t} else {\n\t\t\ttimeoutId = undefined;\n\n\t\t\tif (!immediate) {\n\t\t\t\tconst callContext = storedContext;\n\t\t\t\tconst callArguments = storedArguments;\n\t\t\t\tstoredContext = undefined;\n\t\t\t\tstoredArguments = undefined;\n\t\t\t\tresult = function_.apply(callContext, callArguments);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst debounced = function (...arguments_) {\n\t\tif (storedContext && this !== storedContext) {\n\t\t\tthrow new Error('Debounced method called with different contexts.');\n\t\t}\n\n\t\tstoredContext = this; // eslint-disable-line unicorn/no-this-assignment\n\t\tstoredArguments = arguments_;\n\t\ttimestamp = Date.now();\n\n\t\tconst callNow = immediate && !timeoutId;\n\n\t\tif (!timeoutId) {\n\t\t\ttimeoutId = setTimeout(later, wait);\n\t\t}\n\n\t\tif (callNow) {\n\t\t\tconst callContext = storedContext;\n\t\t\tconst callArguments = storedArguments;\n\t\t\tstoredContext = undefined;\n\t\t\tstoredArguments = undefined;\n\t\t\tresult = function_.apply(callContext, callArguments);\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tdebounced.clear = () => {\n\t\tif (!timeoutId) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearTimeout(timeoutId);\n\t\ttimeoutId = undefined;\n\t};\n\n\tdebounced.flush = () => {\n\t\tif (!timeoutId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst callContext = storedContext;\n\t\tconst callArguments = storedArguments;\n\t\tstoredContext = undefined;\n\t\tstoredArguments = undefined;\n\t\tresult = function_.apply(callContext, callArguments);\n\n\t\tclearTimeout(timeoutId);\n\t\ttimeoutId = undefined;\n\t};\n\n\treturn debounced;\n}\n\n// Adds compatibility for ES modules\nmodule.exports.debounce = debounce;\n\nmodule.exports = debounce;\n","import '../css/country.css';\nimport { fetchCountries } from './country-api';\nimport debounce from 'debounce';\nimport Notiflix from 'notiflix';\n\nconst input = document.querySelector('#search-box');\nconst countryList = document.querySelector('.country-list');\nconst countryInfo = document.querySelector('.country-info');\nconst DEBOUNCE_DELAY = 300;\n\ninput.addEventListener(\n  'input',\n  debounce(e => {\n      const trimmedValue = input.value.trim();\n         cleanHtml();   \n    if (trimmedValue !== '') {\n        fetchCountries(trimmedValue).then(foundData => {      \n\n        if (foundData.length > 10) {\n          Notiflix.Notify.info(\n            'Too many matches found. Please enter a more specific name.'\n          );\n        } else if (foundData.length === 0) {\n          Notiflix.Notify.failure('Oops, there is no country with that name');\n        } else if (foundData.length >= 2 && foundData.length <= 10) {\n         \n          renderCountryList(foundData);\n        } else if (foundData.length === 1) {\n    \n          renderOneCountry(foundData);\n        }\n      });\n    }\n  }, DEBOUNCE_DELAY)\n);\n\nfunction renderCountryList(countries) {\n  const markup = countries\n    .map(country => {\n      return `<li>\n      <img src=\"${country.flags.svg}\" alt=\"Flag of ${\n        country.name.official\n      }\" width=\"30\" hight=\"20\">\n         <b>${country.name.official}</p>\n                </li>`;\n    })\n    .join('');\n  countryList.innerHTML = markup;\n}\n\nfunction renderOneCountry(countries) {\n      const markup = countries\n        .map(country => {\n          return `<li>\n      <img src=\"${country.flags.svg}\" alt=\"Flag of ${\n            country.name.official\n          }\" width=\"30\" hight=\"20\">\n         <b>${country.name.official}</b></p>\n            <p><b>Capital</b>: ${country.capital}</p>\n            <p><b>Population</b>: ${country.population}</p>\n            <p><b>Languages</b>: ${Object.values(country.languages)} </p>\n                </li>`;\n        })\n        .join('');\n      countryList.innerHTML = markup;\n}\n\nfunction cleanHtml() {\n  countryList.innerHTML = '';\n  countryInfo.innerHTML = '';\n}","// const BASE_URL = 'https://restcountries.com/v3.1/name';\n\nexport const fetchCountries = name => {\n    return fetch(\n      `https://restcountries.com/v3.1/name/${name}?fields=,name,capital,population,flags,languages`\n    )\n        .then(response => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            return [];\n          }\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };"],"names":["$815ad92c071f8c63$var$debounce","function_","wait","options","TypeError","RangeError","immediate","storedContext","storedArguments","timeoutId","timestamp","result","later","last","Date","now","setTimeout","undefined","callContext","callArguments","apply","debounced","arguments_","this","Error","callNow","clear","clearTimeout","flush","$815ad92c071f8c63$exports","debounce","$0300b900c4e07a49$var$input","document","querySelector","$0300b900c4e07a49$var$countryList","$0300b900c4e07a49$var$countryInfo","addEventListener","$parcel$interopDefault","e","trimmedValue","value","trim","name","innerHTML","fetch","then","response","ok","status","json","catch","error","console","foundData","length","$1GAPJ","Notify","info","failure","countries","markup","map","country","flags","svg","official","join","$0300b900c4e07a49$var$renderCountryList","capital","population","Object","values","languages","$0300b900c4e07a49$var$renderOneCountry"],"version":3,"file":"country.6c168285.js.map"}